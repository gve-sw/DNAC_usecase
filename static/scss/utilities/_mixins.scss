
// -----------------------------------------------------------------------------
// Absolute Center

@mixin absolute-center {
    z-index: 10 !important;
    position: absolute !important;
    top: 50% !important;
    left: 50% !important;
    transform: translate(-50%,-50%) !important;
}


// -----------------------------------------------------------------------------
// Clearfix

@mixin clearfix {
    &:after {
        clear: both !important;
        content: "" !important;
        display: table !important;
    }
}


// -----------------------------------------------------------------------------
// Disabled

@mixin disabled {
    opacity: 0.75;
    cursor: not-allowed !important;
    pointer-events: none !important;
    z-index: 0 !important;
}

// -----------------------------------------------------------------------------
// Display Mixins

@mixin display-size-0 { font-size: $display-size-0 !important; }
@mixin display-size-1 { font-size: $display-size-1 !important; }
@mixin display-size-2 { font-size: $display-size-2 !important; }
@mixin display-size-3 { font-size: $display-size-3 !important; }
@mixin display-size-4 { font-size: $display-size-4 !important; }


// -----------------------------------------------------------------------------
// Readonly

@mixin readonly {
    opacity: 0.5;
    cursor: not-allowed !important;
    z-index: 0 !important;
}


// -----------------------------------------------------------------------------
// Flex Mixins

@mixin flex {
    display: flex !important;
}

@mixin flex-center {
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
}

@mixin flex-center-vertical {
    display: flex !important;
    align-items: center !important;
}

@mixin flex-center-horizontal {
    display: flex !important;
    justify-content: center !important;
}

@mixin flex-fluid {
    flex: 1 !important;
    flex-shrink: 1 !important;
    flex-wrap: wrap !important;
}


// -----------------------------------------------------------------------------
// Full Page

@mixin full-page {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}

.full-page {
    @include full-page;
}


// -----------------------------------------------------------------------------
// Lists

@mixin list--unstyled {
    list-style: none;

    ul:not(:first-child) {
        padding-left: $base-spacing;
    }
}

@mixin list--inline {
    display: inline-flex;
    flex-wrap: wrap;

    li {
        &:last-child {
            padding-right: 0;
        }
    }

    li + li {
        margin: 0 0 0 -1px;
    }
}

// For inline lists only
@mixin list-divider {
    li:after {
        @include vertical-divider;
    }
    li:last-child:after {
        content: '';
        margin: 0;
    }
}



// -----------------------------------------------------------------------------
// Panels

@mixin panel(
    $color:             $base-font-color,
    $background:        $white,
    $background-hover:  "",
    $border-color:      transparent,
    $border-left-width: "",
    $link-color:        "",
    $link-color-hover:  "",
    $link-decoration:   "",
    $icon-color:        "",
    $embellish:         "")
{
    color: $color;
    position: relative;
    background: $background;
    box-shadow: none;
    border: 1px solid $border-color;

    @if $link-color != "" {
        a {
            color: $link-color;
        }
    }

    @if $link-color-hover != "" {
        a:hover {
            color: $link-color-hover;
        }
    }

    @if $link-decoration != "" {
        a:not(.btn) {
            text-decoration: $link-decoration dotted;

            &:active,
            &:hover,
            &:focus {
                text-decoration: underline;
            }
        }
    }

    @if $background-hover != "" {
        &:hover {
            background: tint($background-hover, 15);
        }
    }

    @if $border-left-width != "" {
        border-left-width: $border-left-width;
    }
}

@mixin panel-hover(
    $link-color:        '',
    $background:        $white,
    $embellish:         'lighten')
{
    @if $embellish == "lighten" {
        background-color: lighten($background, 10);
    }
    @else {
        background-color: darken($background, 10);
    }

    @if $link-color != "" {
        color: $link-color;
    }
}

@mixin panel-section() {
  @include clearfix;
  position: relative;
  padding: $base-panel-section-padding;

  > * {
    &:first-child {
      margin-top: 0;
    }

    &:last-child {
      margin-bottom: 0;
    }
  }
}

@mixin panel-padding($padding: $base-panel-padding) {
  padding: $padding;
}

@mixin panel-margin($margin: $base-panel-margin) {
  .panel + .panel {
      margin: $margin;
  }
}


// -----------------------------------------------------------------------------
// Sections

@mixin section-padding($padding: $base-spacing) {
  padding: $padding 0;
}

@mixin section-margin($margin: $base-spacing) {
  .section + .section {
    margin: $margin 0;
  }
}


// -----------------------------------------------------------------------------
// Text Ellipsis

@mixin text-ellipsis {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@mixin text-noellipsis {
    white-space: normal;
}


// -----------------------------------------------------------------------------
// Text No Select

@mixin text-noselect {
    user-select: none !important;
}


// -----------------------------------------------------------------------------
// Break Words

@mixin text-break {
    word-wrap: break-word !important;
    word-break: break-all !important;
}

@mixin text-break-word {
    word-wrap: break-word !important;
    word-break: break-word !important;
}


// -----------------------------------------------------------------------------
// Monospace

@mixin text-monospace {
    font-family: $monospace-font-family !important;
}


// -----------------------------------------------------------------------------
// Hide input field. Used by checkboxes, radios, and switches to hide the ugly
// browser default input types

@mixin hidden-input {
    display: block;
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    border: 0;
    overflow: hidden;
    clip: rect(0 0 0 0);
}


// -----------------------------------------------------------------------------
// Includes the styles for the focus outline required for accessibility

@mixin focus-outline($color: $base-accent-color) {
    outline-color: $color;
    outline-offset: 1px;
    outline-width: thin;
    outline-style: dashed;
}


// -----------------------------------------------------------------------------
// Dividers

@mixin divider-horizontal-spacing($margin: $base-spacing-regular) {
    margin: $margin 0;
}

@mixin divider-horizontal($thickness: 1px, $color: $base-divider-color, $location: top) {
    border-#{$location}: $thickness solid $color;
}

@mixin divider-accent(
    $background:    $base-divider-accent-background,
    $height:        $base-divider-height,
    $width:         $base-divider-accent-width,
    $min-width:     $base-divider-accent-min-width
) {
    &:before {
        position: absolute;
        left: 0;
        top: -($height);
        width: $width;
        min-width: $min-width;
        height: $height;
        background-color: $background;
        content: '';
    }
}

@mixin vertical-divider($margin: 0 $base-spacing * 0.25) {
    color: $base-muted-color;
    content: '|';
    margin: $margin;
    padding: 0;
}

.divider--vertical {
    > :after {
        @include vertical-divider;
    }
}

// -----------------------------------------------------------------------------
// Hero

@mixin hero-color($background: $base-button-background, $color: $white) {
  background-image: none;
  &:after {
    background: $background;
  }
  .apollo-hero__content {
    color: $color;
  }
}


// -----------------------------------------------------------------------------
// Labels / Tags

@mixin label-size(
  $padding: $base-label-padding,
  $font-size: $base-label-font-size,
  $width: "",
  $height: $base-label-height)
{
    margin: 1px 0;
    padding: $padding;
    font-size: $font-size;
    height: $height;
    line-height: $font-size;
    vertical-align: middle;

    @if $width != "" {
        width: $width;
        min-width: $width;
        max-width: $width;
    }

    .icon-close {
        font-size: $font-size;
    }
}

@mixin label-color(
    $background: $base-label-background,
    $border: "unset",
    $color: $base-label-color-darker)
{
    background: $background;
    border: $border;
    color: $color;

    a,
    a:hover {
        color: $color;
    }
}

@mixin label-outlined(
    $color: $base-font-color,
    $border: $label-background)
{
    background: transparent;
    color: $color;
    border: 2px solid $border;
}


// -----------------------------------------------------------------------------
// Links / Buttons

%link {
    display: inline-block;
    -moz-appearance: none;
    -webkit-appearance: none;
    border-width: 0;
    border-radius: $aui-button-border-radius;
    font-weight: inherit;
    cursor: pointer;
    -webkit-font-smoothing: inherit;
}

@mixin link-plain {
    @extend %link;
    color: $base-font-color;

    &:hover {
        color: $base-link-color;
    }
}

@mixin link-underline {
    @extend %link;
    color: $base-font-color;

    &:hover {
        color: $base-font-color;
        text-decoration: underline;
    }
}

@mixin btn-size(
    $padding:       $aui-button-padding,
    $font-size:     $aui-button-font-size,
    $line-height:   $aui-button-line-height,
    $height:        $aui-button-height,
    $min-width:     $aui-button-min-width,
    $max-width:     $aui-button-max-width)
{
    @extend %link;
    @include text-ellipsis;
    border-width: 1px;
    text-align: center;
    vertical-align: middle;
    padding: $padding;
    font-size: $font-size;
    font-weight: $base-button-font-weight;
    line-height: $line-height;
    height: $height;
    min-width: $min-width;
    max-width: $max-width;
    overflow: visible;

    > span[class^="icon-"] {
        font-size: $font-size;
    }

    .btn__subtext {
        top: $height + ($base-spacing * 0.25);
    }
}

@mixin btn-color(
    $background:          $aui-button-background,
    $color:               $aui-button-color,
    $background-disabled: $aui-button-background-disabled,
    $background-hover:    $aui-button-background-hover,
    $background-active:   $aui-button-background-active,
    $background-focus:    "",
    $background-selected: $aui-button-background-selected,
    $color-disabled:      $base-color-disabled,
    $color-active:        $aui-button-color-active,
    $color-hover:         $aui-button-color-hover,
    $color-focus:         "",
    $color-selected:      "",
    $border:              "",
    $border-disabled:     "",
    $border-hover:        "",
    $border-focus:        "",
    $border-selected:     "",
    $group-border-color:  "")
{
    border: 1px solid transparent;
    background: $background;
    color: $color;
    text-decoration: none;

    @if $border != "" {
        box-shadow: inset 0 0 0 $base-button-border-size $border;
    }

    &:hover, &:focus, &:active {
        text-decoration: none;
    }

    &:hover {
        box-shadow: 0 0 0 0 transparent;
        background-color: $background-hover;
        color: $color-hover;

        @if $border-hover != "" {
            box-shadow: inset 0 0 0 $base-button-border-size $border-hover;
        }
    }

    &.focus, &:focus {
        @if $border-focus != "" {
            outline: none;
            box-shadow: 0 0 1px 1px $border-focus;
            border: 1px solid $white;
        }
        @if $color-focus != "" {
            color: $color-focus;
        }
        @if $background-focus != "" {
            background-color: $background-focus;
        }
    }

    &.active,
    &:active {
        box-shadow: 0 0 0 0 transparent;
        color: $color-active;
        background-color: $background-active;
    }

    &.disabled,
    &[disabled] {
        opacity: 0.5;
        color: $color-disabled;
        outline: 0;
        //border: 1px solid transparent;
        box-shadow: none;

        @if $background-disabled != "" {
            background-color: $background-disabled;
        }
        @if $border-disabled != "" {
            // box-shadow: inset 0 0 0 $base-button-border-size $border-disabled;
            border: $base-button-border-size solid $border-disabled;
        }
    }

    &.selected {
        @if $background-selected != "" {
            background-color: $background-selected;
        }
        @if $border-selected != "" {
            box-shadow: inset 0 0 0 $base-button-border-size $border-selected;
        }
        @if $color-selected != "" {
            color: $color-selected;
        }
    }
}

@mixin btn-margin(
    $margin: $base-btn-margin)
{
    .btn + .btn {
        margin-left: $margin;
    }
}

@mixin drawer-closed() {
    @include icon-chevron-down;
    transform: rotate(0);
}

@mixin drawer-opened() {
    transform: rotate(180deg);
}

/// Fetch nested keys
/// @param {Map} $map - Map
/// @param {Arglist} $keys - Keys to fetch
/// @return {*}
@function map-deep-get($map, $keys...) {
    @each $key in $keys {
        $map: map-get($map, $key);
    }
    @return $map;
}

/// Test if map got all `$keys` nested with each others
/// @param {Map} $map - Map
/// @param {Arglist} $keys - Keys to test
/// @return {Bool}
@function map-has-nested-keys($map, $keys...) {
    @each $key in $keys {
        @if not map-has-key($map, $key) {
            @return false;
        }
        $map: map-get($map, $key);
    }
    @return true;
}

@mixin table-wrap {
    tr, td, th {
        white-space: normal;
        overflow: visible;
    }
}
